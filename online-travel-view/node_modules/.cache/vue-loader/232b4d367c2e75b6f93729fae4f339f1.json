{"remainingRequest":"D:\\毕业设计\\Online-Travel\\online-travel-view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\毕业设计\\Online-Travel\\online-travel-view\\src\\views\\user\\Order.vue?vue&type=style&index=0&id=6df06484&scoped=true&lang=scss&","dependencies":[{"path":"D:\\毕业设计\\Online-Travel\\online-travel-view\\src\\views\\user\\Order.vue","mtime":1743953552723},{"path":"D:\\毕业设计\\Online-Travel\\online-travel-view\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\毕业设计\\Online-Travel\\online-travel-view\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\毕业设计\\Online-Travel\\online-travel-view\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\毕业设计\\Online-Travel\\online-travel-view\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\毕业设计\\Online-Travel\\online-travel-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\毕业设计\\Online-Travel\\online-travel-view\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLyog5Y+v5Lul5Zyo6L+Z6YeM5re75Yqg6aKd5aSW55qE6Ieq5a6a5LmJ5qC35byPICovDQo="},{"version":3,"sources":["Order.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgXA","file":"Order.vue","sourceRoot":"src/views/user","sourcesContent":["<template>\r\n    <div class=\"bg-white p-4 rounded-md shadow-md\">\r\n        <!-- 门票订单详情 -->\r\n        <div>\r\n            <h1 class=\"text-2xl font-bold m-4\">门票订单详情</h1>\r\n            <div class=\"flex flex-wrap items-center p-2 m-2\">\r\n                <el-input v-model=\"ticketSearchKeyword\" placeholder=\"请输入景点名称搜索\" @keyup.enter=\"handleTicketSearch\" class=\"mr-2 w-48\"></el-input>\r\n                <el-button @click=\"handleTicketSearch\">搜索</el-button>\r\n                <el-select @change=\"fetchTicketFreshData\" size=\"small\" v-model=\"scenicTicketOrderQueryDto.payStatus\"\r\n                    class=\"mx-2\" placeholder=\"支付状态\">\r\n                    <el-option v-for=\"item in statusList\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\r\n                    </el-option>\r\n                </el-select>\r\n                <el-date-picker size=\"small\" class=\"w-56 mx-2\" v-model=\"ticketSearchTime\"\r\n                    type=\"daterange\" range-separator=\"至\" start-placeholder=\"创建开始\" end-placeholder=\"创建结束\">\r\n                </el-date-picker>\r\n            </div>\r\n            <div class=\"border-t border-gray-200 p-2 m-2\">\r\n                <el-table :data=\"ticketTableData\" style=\"width: 100%\">\r\n                    <el-table-column prop=\"scenicId\" sortable width=\"120\" label=\"景点ID\"></el-table-column>\r\n                    <el-table-column prop=\"scenicName\" label=\"景点名称\"></el-table-column>\r\n                    <el-table-column prop=\"concatPerson\" width=\"120\" label=\"联系人\"></el-table-column>\r\n                    <el-table-column prop=\"concatPhone\" width=\"120\" label=\"联系电话\"></el-table-column>\r\n                    <el-table-column prop=\"buyNumber\" sortable width=\"120\" label=\"门票数\"></el-table-column>\r\n                    <el-table-column prop=\"amount\" sortable width=\"120\" label=\"金额\"></el-table-column>\r\n                    <el-table-column prop=\"payTime\" sortable width=\"168\" label=\"支付时间\"></el-table-column>\r\n                    <el-table-column prop=\"createTime\" sortable width=\"168\" label=\"创建时间\"></el-table-column>\r\n                    <el-table-column prop=\"useStatus\" width=\"98\" label=\"支付状态\">\r\n                        <template slot-scope=\"scope\">\r\n                            <i v-if=\"!scope.row.payStatus\" class=\"mr-2 text-yellow-500 fas fa-exclamation-triangle\"></i>\r\n                            <i v-else class=\"mr-2 text-green-500 fas fa-check-circle\"></i>\r\n                            <el-tooltip v-if=\"!scope.row.payStatus\" class=\"item\" effect=\"dark\" content=\"未支付，不能重新下单\"\r\n                                placement=\"bottom-end\">\r\n                                <span class=\"underline decoration-dashed\">未支付</span>\r\n                            </el-tooltip>\r\n                            <span v-else>已支付</span>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column label=\"操作\" width=\"110\">\r\n                        <template slot-scope=\"scope\">\r\n                            <span class=\"text-blue-500 hover:underline cursor-pointer\" v-if=\"!scope.row.payStatus\"\r\n                                @click=\"handleTicketPay(scope.row)\">支付</span>\r\n                            <span class=\"text-red-500 hover:underline cursor-pointer\" @click=\"handleTicketDelete(scope.row)\">删除</span>\r\n                        </template>\r\n                    </el-table-column>\r\n                </el-table>\r\n                <el-pagination class=\"my-2\" @size-change=\"handleTicketSizeChange\"\r\n                    @current-change=\"handleTicketCurrentChange\" :current-page=\"ticketCurrentPage\" :page-sizes=\"[10, 20]\"\r\n                    :page-size=\"ticketPageSize\" layout=\"total, sizes, prev, pager, next, jumper\"\r\n                    :total=\"ticketTotalItems\"></el-pagination>\r\n            </div>\r\n        </div>\r\n        <!-- 酒店订单详情 -->\r\n        <div>\r\n            <h1 class=\"text-2xl font-bold m-4\">酒店订单详情</h1>\r\n            <div class=\"flex flex-wrap items-center p-2 m-2\">\r\n                <el-input v-model=\"hotelSearchKeyword\" placeholder=\"请输入酒店名称搜索\" @keyup.enter=\"handleHotelSearch\" class=\"mr-2 w-48\"></el-input>\r\n                <el-button @click=\"handleHotelSearch\">搜索</el-button>\r\n                <el-select @change=\"fetchHotelFreshData\" size=\"small\" v-model=\"hotelOrderQueryDto.payStatus\"\r\n                    class=\"mx-2\" placeholder=\"支付状态\">\r\n                    <el-option v-for=\"item in statusList\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\r\n                    </el-option>\r\n                </el-select>\r\n                <el-date-picker size=\"small\" class=\"w-56 mx-2\" v-model=\"hotelSearchTime\"\r\n                    type=\"daterange\" range-separator=\"至\" start-placeholder=\"创建开始\" end-placeholder=\"创建结束\">\r\n                </el-date-picker>\r\n            </div>\r\n            <div class=\"border-t border-gray-200 p-2 m-2\">\r\n                <el-table :data=\"hotelTableData\" style=\"width: 100%\">\r\n                    <el-table-column prop=\"hotelName\" label=\"酒店\"></el-table-column>\r\n                    <el-table-column prop=\"roomName\" label=\"房型\"></el-table-column>\r\n                    <el-table-column prop=\"concatPerson\" width=\"120\" label=\"联系人\"></el-table-column>\r\n                    <el-table-column prop=\"concatPhone\" width=\"120\" label=\"联系电话\"></el-table-column>\r\n                    <el-table-column prop=\"amount\" sortable width=\"120\" label=\"金额\"></el-table-column>\r\n                    <el-table-column prop=\"payTime\" sortable width=\"168\" label=\"支付时间\"></el-table-column>\r\n                    <el-table-column prop=\"createTime\" sortable width=\"168\" label=\"创建时间\"></el-table-column>\r\n                    <el-table-column prop=\"useStatus\" width=\"98\" label=\"支付状态\">\r\n                        <template slot-scope=\"scope\">\r\n                            <i v-if=\"!scope.row.payStatus\" class=\"mr-2 text-yellow-500 fas fa-exclamation-triangle\"></i>\r\n                            <i v-else class=\"mr-2 text-green-500 fas fa-check-circle\"></i>\r\n                            <el-tooltip v-if=\"!scope.row.payStatus\" class=\"item\" effect=\"dark\" content=\"未支付，不能重新下单\"\r\n                                placement=\"bottom-end\">\r\n                                <span class=\"underline decoration-dashed\">未支付</span>\r\n                            </el-tooltip>\r\n                            <span v-else>已支付</span>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column label=\"操作\" width=\"110\">\r\n                        <template slot-scope=\"scope\">\r\n                            <span class=\"text-blue-500 hover:underline cursor-pointer\" v-if=\"!scope.row.payStatus\"\r\n                                @click=\"handleHotelPay(scope.row)\">支付</span>\r\n                            <span class=\"text-red-500 hover:underline cursor-pointer\" @click=\"handleHotelDelete(scope.row)\">删除</span>\r\n                        </template>\r\n                    </el-table-column>\r\n                </el-table>\r\n                <el-pagination class=\"my-2\" @size-change=\"handleHotelSizeChange\"\r\n                    @current-change=\"handleHotelCurrentChange\" :current-page=\"hotelCurrentPage\" :page-sizes=\"[10, 20]\"\r\n                    :page-size=\"hotelPageSize\" layout=\"total, sizes, prev, pager, next, jumper\"\r\n                    :total=\"hotelTotalItems\"></el-pagination>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport LineChart from \"@/components/LineChart\"\r\nexport default {\r\n    components: { LineChart },\r\n    data() {\r\n        return {\r\n            filterText: '',\r\n            // 门票订单相关数据\r\n            ticketCurrentPage: 1,\r\n            ticketPageSize: 10,\r\n            ticketTotalItems: 0,\r\n            ticketQueryDays: 365,\r\n            ticketTableData: [],\r\n            ticketSelectedRows: [],\r\n            scenicTicketOrderQueryDto: {},\r\n            ticketSearchTime: [],\r\n            ticketValues: [],\r\n            ticketDates: [],\r\n            ticketSearchKeyword: '',\r\n            // 酒店订单相关数据\r\n            hotelCurrentPage: 1,\r\n            hotelPageSize: 10,\r\n            hotelTotalItems: 0,\r\n            hotelQueryDays: 365,\r\n            hotelTableData: [],\r\n            hotelSelectedRows: [],\r\n            hotelOrderQueryDto: {},\r\n            hotelSearchTime: [],\r\n            hotelValues: [],\r\n            hotelDates: [],\r\n            hotelSearchKeyword: '',\r\n            statusList: [{ value: null, label: '全部' }, { value: 0, label: '未支付' }, { value: 1, label: '已支付' }],\r\n        };\r\n    },\r\n    created() {\r\n        this.fetchTicketFreshData();\r\n        this.fetchHotelFreshData();\r\n        // 数据太少，默认查365天\r\n        this.selectedTicketData(this.ticketQueryDays);\r\n        this.selectedHotelData(this.hotelQueryDays);\r\n    },\r\n    methods: {\r\n        // 封装请求后端成交数据的方法\r\n        async fetchTransactionData(url, time) {\r\n            try {\r\n                const response = await this.$axios.get(url + time);\r\n                const { data } = response;\r\n                if (data.code === 200) {\r\n                    return {\r\n                        values: data.data.map(entity => entity.count),\r\n                        dates: data.data.map(entity => entity.name)\r\n                    };\r\n                }\r\n                return null;\r\n            } catch (error) {\r\n                console.error('获取成交数据异常:', error);\r\n                return null;\r\n            }\r\n        },\r\n        // 请求后端的门票金额成交数据\r\n        async selectedTicketData(time) {\r\n            const result = await this.fetchTransactionData('/scenicTicketOrder/daysQueryUser/', time);\r\n            if (result) {\r\n                this.ticketValues = result.values;\r\n                this.ticketDates = result.dates;\r\n            }\r\n        },\r\n        // 请求后端的酒店金额成交数据\r\n        async selectedHotelData(time) {\r\n            const result = await this.fetchTransactionData('/hotelOrderInfo/daysQueryUser/', time);\r\n            if (result) {\r\n                this.hotelValues = result.values;\r\n                this.hotelDates = result.dates;\r\n            }\r\n        },\r\n        // 置位\r\n        cannel() {\r\n            this.data = {};\r\n            this.dialogOperation = false;\r\n            this.isOperation = false;\r\n        },\r\n        // 封装批量删除方法\r\n        async batchDelete(url, selectedRows, successMessage, errorMessage) {\r\n            if (!selectedRows.length) {\r\n                this.$message('未选中任何数据');\r\n                return;\r\n            }\r\n            const confirmed = await this.$swalConfirm({\r\n                title: '删除数据',\r\n                text: '删除后不可恢复，是否继续？',\r\n                icon: 'warning',\r\n            });\r\n            if (confirmed) {\r\n                try {\r\n                    let ids = selectedRows.map(entity => entity.id);\r\n                    const response = await this.$axios.post(url, ids);\r\n                    if (response.data.code === 200) {\r\n                        this.$swal.fire({\r\n                            title: '删除提示',\r\n                            text: response.data.msg,\r\n                            icon: 'success',\r\n                            showConfirmButton: false,\r\n                            timer: 2000,\r\n                        });\r\n                        return true;\r\n                    }\r\n                } catch (e) {\r\n                    this.$swal.fire({\r\n                        title: '错误提示',\r\n                        text: errorMessage || e,\r\n                        icon: 'error',\r\n                        showConfirmButton: false,\r\n                        timer: 2000,\r\n                    });\r\n                    console.error(errorMessage || e);\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n        // 批量删除门票订单数据\r\n        async batchDeleteTicket() {\r\n            const success = await this.batchDelete('/scenicTicketOrder/batchDelete', this.ticketSelectedRows, null, '门票订单信息删除异常');\r\n            if (success) {\r\n                this.fetchTicketFreshData();\r\n            }\r\n        },\r\n        // 批量删除酒店订单数据\r\n        async batchDeleteHotel() {\r\n            const success = await this.batchDelete('/hotelOrderInfo/batchDelete', this.hotelSelectedRows, null, '酒店订单信息删除异常');\r\n            if (success) {\r\n                this.fetchHotelFreshData();\r\n            }\r\n        },\r\n        // 封装刷新订单数据的方法\r\n        async fetchOrderData(url, currentPage, pageSize, filterText, searchTime, queryDto, keyword) {\r\n            try {\r\n                let startTime = null;\r\n                let endTime = null;\r\n                if (searchTime != null && searchTime.length === 2) {\r\n                    const [startDate, endDate] = await Promise.all(searchTime.map(date => date.toISOString()));\r\n                    startTime = `${startDate.split('T')[0]}T00:00:00`;\r\n                    endTime = `${endDate.split('T')[0]}T23:59:59`;\r\n                }\r\n                // 请求参数\r\n                const params = {\r\n                    current: currentPage,\r\n                    size: pageSize,\r\n                    key: filterText,\r\n                    startTime: startTime,\r\n                    endTime: endTime,\r\n                    keyword: keyword,\r\n                    ...queryDto\r\n                };\r\n                const response = await this.$axios.post(url, params);\r\n                const { data } = response;\r\n                return {\r\n                    tableData: data.data,\r\n                    totalItems: data.total\r\n                };\r\n            } catch (error) {\r\n                console.error('查询订单信息异常:', error);\r\n                return null;\r\n            }\r\n        },\r\n        // 刷新门票订单数据\r\n        async fetchTicketFreshData() {\r\n            const result = await this.fetchOrderData('/scenicTicketOrder/queryUser', this.ticketCurrentPage, this.ticketPageSize, this.filterText, this.ticketSearchTime, this.scenicTicketOrderQueryDto, this.ticketSearchKeyword);\r\n            if (result) {\r\n                this.ticketTableData = result.tableData;\r\n                this.ticketTotalItems = result.totalItems;\r\n            }\r\n        },\r\n        // 刷新酒店订单数据\r\n        async fetchHotelFreshData() {\r\n            const result = await this.fetchOrderData('/hotelOrderInfo/queryUser', this.hotelCurrentPage, this.hotelPageSize, this.filterText, this.hotelSearchTime, this.hotelOrderQueryDto, this.hotelSearchKeyword);\r\n            if (result) {\r\n                this.hotelTableData = result.tableData;\r\n                this.hotelTotalItems = result.totalItems;\r\n            }\r\n        },\r\n        // 门票搜索方法\r\n        async handleTicketSearch() {\r\n            this.ticketCurrentPage = 1;\r\n            await this.fetchTicketFreshData();\r\n        },\r\n        // 酒店搜索方法\r\n        async handleHotelSearch() {\r\n            this.hotelCurrentPage = 1;\r\n            await this.fetchHotelFreshData();\r\n        },\r\n        add() {\r\n            this.dialogOperation = true;\r\n        },\r\n        handleTicketFilter() {\r\n            this.ticketCurrentPage = 1;\r\n            this.fetchTicketFreshData();\r\n        },\r\n        handleTicketFilterClear() {\r\n            this.filterText = '';\r\n            this.handleTicketFilter();\r\n        },\r\n        handleHotelFilter() {\r\n            this.hotelCurrentPage = 1;\r\n            this.fetchHotelFreshData();\r\n        },\r\n        handleHotelFilterClear() {\r\n            this.filterText = '';\r\n            this.handleHotelFilter();\r\n        },\r\n        handleTicketSizeChange(val) {\r\n            this.ticketPageSize = val;\r\n            this.ticketCurrentPage = 1;\r\n            this.fetchTicketFreshData();\r\n        },\r\n        handleTicketCurrentChange(val) {\r\n            this.ticketCurrentPage = val;\r\n            this.fetchTicketFreshData();\r\n        },\r\n        handleHotelSizeChange(val) {\r\n            this.hotelPageSize = val;\r\n            this.hotelCurrentPage = 1;\r\n            this.fetchHotelFreshData();\r\n        },\r\n        handleHotelCurrentChange(val) {\r\n            this.hotelCurrentPage = val;\r\n            this.fetchHotelFreshData();\r\n        },\r\n        // 封装支付方法\r\n        async handlePay(url, row, successMessage, fetchDataMethod) {\r\n            const order = { id: row.id };\r\n            try {\r\n                const res = await this.$axios.post(url, order);\r\n                if (res.data.code === 200) {\r\n                    this.$message.success(successMessage);\r\n                    await fetchDataMethod();\r\n                    await this[`selected${fetchDataMethod.name.replace('fetch', '')}Data`](this[`${fetchDataMethod.name.replace('fetch', '').toLowerCase()}QueryDays`]);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"支付错误：\", error);\r\n            }\r\n        },\r\n        // 处理门票支付的方法\r\n        handleTicketPay(row) {\r\n            this.handlePay('/scenicTicketOrder/pay', row, '支付成功', this.fetchTicketFreshData);\r\n        },\r\n        // 处理酒店支付的方法\r\n        handleHotelPay(row) {\r\n            this.handlePay('/hotelOrderInfo/pay', row, '支付成功', this.fetchHotelFreshData);\r\n        },\r\n        // 处理门票删除的方法\r\n        handleTicketDelete(row) {\r\n            this.ticketSelectedRows.push(row);\r\n            this.batchDeleteTicket();\r\n        },\r\n        // 处理酒店删除的方法\r\n        handleHotelDelete(row) {\r\n            this.hotelSelectedRows.push(row);\r\n            this.batchDeleteHotel();\r\n        }\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n/* 可以在这里添加额外的自定义样式 */\r\n</style>    "]}]}